<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
                      http://www.springframework.org/schema/mvc/spring-mvc.xsd
                      http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 스캔한 클래스 내부의 클래스 중 @Controller Annotation 을 가지고 있는 클래스들이 Controller로 동작하게 함 -->

	<!-- Annotation 이 가능하도록 설정하기 -->
	<annotation-driven />

	<!-- Scan 할 Bean 들이 모여있는 package 를 지정함 -->
	<context:component-scan base-package="com.spring.controller" />
	<context:component-scan base-package="com.spring.dao" />
	<context:component-scan base-package="com.spring.service" />

	<!-- Setting prefix and suffix for string (path) returned from Controller -->
	<!-- ViewResolver : Making content of View interpret -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/view/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 프로젝트에서 사용하는 정적 파일(이미지, 사운드, 동영상, js, css 등) 경로 설정하기 -->
	<!-- Setting the path to static files (images, sounds, videos, js, css, etc.) used in the project -->
	<resources mapping="/**" location="/resources/" />

	<!-- properties 파일 내용을 사용할 수 있도록 Bean 등록 -->
	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>/WEB-INF/properties/db.properties</beans:value>
				<beans:value>/WEB-INF/properties/option.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- DB Access information management Bean -->
	<beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source">
		<beans:property name="driverClassName" value="${db.classname}" />
		<beans:property name="url" value="${db.url}" />
		<beans:property name="username" value="${db.username}" />
		<beans:property name="password" value="${db.password}" />
	</beans:bean>

	<!-- Query and Data Base Access information management Bean -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
		<beans:property name="dataSource" ref="basic_data_source" />
		<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml" />
	</beans:bean>

	<!-- Bean that Make the Query execute Bean (Mapper) -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession" />
	</beans:bean>

	<!-- Interceptor -->
	<interceptors>

		<interceptor>
			<mapping path="/**" />
			<beans:bean class="com.spring.interceptor.TopMenuInterceptor" />
		</interceptor>
		<!-- The intercepter for making the administrator's only page -->
		<interceptor>
			<mapping path="/admin/**" />
			<beans:bean class="com.spring.interceptor.AdminInterceptor" />
		</interceptor>
		<!-- Only the writers can edit the post. -->
		<interceptor>
			<mapping path="/board/modify" />
			<beans:bean class="com.spring.interceptor.CheckWriterInterceptor" />
		</interceptor>
		<!-- Only administrators and writers can delete posts. -->
		<interceptor>
			<mapping path="/board/deletePost" /> 
			<beans:bean class="com.spring.interceptor.DeleteInterceptor" />
		</interceptor>

	</interceptors>
	<!-- Setting Message Source -->
	<beans:bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/WEB-INF/properties/errorMessage</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- Registering an accessor to access messages -->
	<beans:bean class="org.springframework.context.support.MessageSourceAccessor">
		<beans:constructor-arg ref="messageSource" />
	</beans:bean>
	<!-- Data management when uploading files -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000" /> <!-- Max upload size : 10MB -->
		<beans:property name="maxInMemorySize" value="100000000" /> <!-- Max size of file in memory : 10MB -->
	</beans:bean>

</beans:beans>