<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<!-- 1. 1) 메인페이지로 간다.(with 글 목록) -->
	<select id="goMain" parameterType="java.lang.Integer" resultType="com.spring.dto.PostDTO">
		select f.postNo, f.title, f.content, f.writer, f.regDate, f.viewCount, f.sameThinking, f.boardNo, f.imageFileName,
			(select count(*) from reply where postNo = f.postNo) as replyCount
		from freeboard f
		where f.boardNo = #{boardNo}
		order by f.postNo desc
	</select>

	<!-- 1. 2) 그 해당 게시판에 써져있는 게시글 수 가져오기(페이징 작업때문에 필요하다. ) -->
	<select id="getPostCnt" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select count(*) from freeboard where boardNo = #{boardNo}
	</select>

	<!-- 1. 3) 게시판 이름, 정보 가져오기 -->
	<select id="getBoardName" parameterType="java.lang.Integer" resultType="java.lang.String">
		select boardName 
		from boardincategory 
		where boardNo=#{boardNo}
	</select>

	<!-- 1. 4) 게시글 검색 -->
	<select id="searchList" parameterType="com.spring.dto.PostDTO" resultType="com.spring.dto.PostDTO">
		select postNo, title, writer, DATE_FORMAT(regDate,'%Y-%m-%d') as regDate, viewCount, sameThinking, boardNo
		from freeboard
		where boardNo = #{boardNo} and
		<if test="type!=null and type == 'title'">
			title like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'content'">
			content like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'writer'">
			writer like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'titleANDcontent'">
			(title like CONCAT('%',#{keyword},'%') OR content like CONCAT('%',#{keyword},'%'))
		</if>
		order by postNo DESC
	</select>

	<!-- 1. 4) 게시글 검색후, "검색결과 수" 페이징 작업 -->
	<select id="searchCount" parameterType="com.spring.dto.PostDTO" resultType="java.lang.Integer">
		select count(*)
		from freeboard
		where boardNo = #{boardNo} and
		<if test="type!=null and type == 'title'">
			title like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'content'">
			content like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'writer'">
			writer like CONCAT('%',#{keyword},'%')
		</if>
		<if test="type!=null and type == 'titleANDcontent'">
			(title like CONCAT('%',#{keyword},'%') OR content like
			CONCAT('%',#{keyword},'%'))
		</if>
	</select>

	<!-- 2. 글쓰기 Create(이미지 파일 첨부기능포함) -->
	<insert id="writeProcess" parameterType="com.spring.dto.PostDTO" useGeneratedKeys="true" keyProperty="postNo">
		insert into freeboard(boardNo, title, content, writer, regDate, imageFileName)
		values(#{boardNo}, #{title}, #{content}, #{writer}, Now(), #{imageFileName})
	</insert>

	<!-- 3. 1) 글 하나 읽기 Reading -->
	<select id="read" parameterType="java.lang.Integer" resultType="com.spring.dto.PostDTO">
		select postNo, title, content, writer, regDate, viewCount, sameThinking, boardNo,
		imageFileName, (select count(*) from reply where postNo = f.postNo) as replyCount
		from freeboard f
		where postNo = #{postNo}
	</select>

	<!-- 3. 2) 조회수 증가 -->
	<update id="increasingViewCount"
		parameterType="java.lang.Integer">
		update freeboard set viewCount = viewCount + 1 where
		postNo = #{postNo}
	</update>

	<!-- 3. 3) 좋아요 버튼 클릭 -->
	<update id="like" parameterType="java.lang.Integer">
		update freeboard set
		sameThinking = sameThinking + 1 where postNo = #{postNo}
	</update>

	<!-- 3. 4) 게시글 신고 (이미지 파일 첨부기능포함) -->
	<insert id="reportProcess" parameterType="com.spring.dto.ReportDTO" useGeneratedKeys="true" keyProperty="reportNo">
		insert into reportboard(postNo, reason, detail, reporter, reportDate, imageFileName)
						values(#{postNo},#{reason}, #{detail}, #{reporter}, Now(), #{imageFileName})
	</insert>

	<!-- 4. 1) 글 수정하기 Updating -->
	<update id="modify" parameterType="com.spring.dto.PostDTO">
		update freeboard
		set title = #{title}, 
			content = #{content},
			imageFileName = #{imageFileName, jdbcType=VARCHAR}
		where postNo = #{postNo}
		<!-- 위의 file은 데이터베이스에 저장되어있는 이미지 파일이름을 저장하는 변수 -->
	</update>

	<!-- 4. 2) 글 수정 시 이미 업로드한 사진 파일도 삭제 -->
	<update id="deleteImageFile"
		parameterType="com.spring.dto.PostDTO">
		update freeboard
		set imageFileName = #{imageFileName}
		where postNo = #{postNo}
	</update>

	<!-- 5. 글 삭제 deleting -->
	<delete id="deletePost" parameterType="java.lang.Integer">
		delete
		from freeboard
		where postNo = #{postNo}
	</delete>

</mapper>